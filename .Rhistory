unnest(t_test)
View(t_test_results)
t_test_results
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test) |> kable()
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test) |> xtable()
print(t_test_results)
library(stargazer)
library(estimatr)
library(ggplot2)
library(plm)
library(lmtest)
library(dplyr)
# SET WORKING DIRECTORY
# IMPORT CSV DATA
RPS <- read.csv("RPS_data.csv")
# SUMMARY STATISTICS
stargazer(RPS, type="text", digits=2)
# LIST SOME VARIABLES FOR CALIFORNIA
RPS%>%
filter(state_name == "California")%>%
select(state_name, year, rps_D, rps_ever_adopter, rps_implementation_year)%>%
View
NEW_RPS_D = matrix(0, nrow(RPS), 1)
View(NEW_RPS_D)
NEW_RPS_D = as.numeric((RPS$rps_ever_adopter==1) & (RPS$year>=RPS$rps_implementation_year))
View(RPS)
View(RPS)
NEW_nearinc_year <- matrix(0, nrow(data), 1)
NEW_nearinc_year <- as.numeric((data$nearinc == 1) & (data$year == 1981))
cor(NEW_nearinc_year, data$nearinc_year)
mean(data$nearinc_year)
cor(NEW_nearinc_year, data$nearinc_year)
data <- data |>
mutate(year1981 = as.numeric(year == 1981),
nearinc_year = nearinc * year1981)
View(data)
# Compare the NEW_nearinc_year variable with the nearinc_year variable
cor(NEW_nearinc_year, data$nearinc_year)
# Compare the NEW_nearinc_year variable with the nearinc_year variable
cor(NEW_nearinc_year, data$nearinc_year)
mean(data$nearinc_year)
mean(NEW_nearinc_year)
# Estimate the DD model using the NEW_nearinc_year variable
mod_dd_new <- lm(rprice ~ year1981 + nearinc + NEW_nearinc_year, data = data)
# Estimate the DD model using the NEW_nearinc_year variable
mod_dd_new <- lm(rprice ~ year1981 + nearinc + NEW_nearinc_year, data = data)
# Calculate robust standard errors
se_mod_dd_new <- starprep(mod_dd_new, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_new, se = se_mod_dd_new, type="text")
cor(NEW_RPS_D, RPS$rps_D)
mean(RPS$rps_D)
mean(NEW_RPS_D)
# DD REGRESSION, Y = Wind+Solar installed capacity (MW), using lm package
DD_cap1 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap1 <- starprep(DD_cap1, stat = c("std.error"), se_type = "HC2", alpha = 0.05)
DD_cap2 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap2 <- starprep(DD_cap2, stat = c("std.error"), se_type = "CR2", clusters=RPS$state_name, alpha = 0.05)
se_models <- list(se_DD_cap1[[1]], se_DD_cap2[[1]])
stargazer(DD_cap1, DD_cap2, se = se_models, keep=c("rps_D"), type="text")
View(RPS)
library(stargazer)
library(estimatr)
library(ggplot2)
library(plm)
library(lmtest)
library(dplyr)
# SET WORKING DIRECTORY
# IMPORT CSV DATA
RPS <- read.csv("RPS_data.csv")
# SUMMARY STATISTICS
stargazer(RPS, type="text", digits=2)
# LIST SOME VARIABLES FOR CALIFORNIA
RPS%>%
filter(state_name == "California")%>%
select(state_name, year, rps_D, rps_ever_adopter, rps_implementation_year)%>%
View
View(RPS)
NEW_RPS_D = matrix(0, nrow(RPS), 1)
NEW_RPS_D = as.numeric((RPS$rps_ever_adopter==1) & (RPS$year>=RPS$rps_implementation_year))
NEW_RPS_D
cor(NEW_RPS_D, RPS$rps_D)
mean(RPS$rps_D)
mean(NEW_RPS_D)
# Create a variable for the post-treatment period (1981)
data <- data %>%
mutate(year1981 = as.numeric(year == 1981))
library(tidyverse)
library(stargazer)
library(estimatr)
library(broom)
data <- read_csv("KM_EDS241.csv")
data_1981 <- data |> filter(year == 1981)
mod1 <- lm(rprice ~ nearinc, data = data_1981)
se_model1 <- starprep(mod1, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
stargazer(mod1, se = se_model1, type="text")
data_1978 <- data |>
filter(year == 1978)
data_near_inc <- subset(data_1978, nearinc == 1)
data_not_near_inc <- subset(data_1978, nearinc == 0)
summary(data_near_inc)
summary(data_not_near_inc)
# Create a function to perform the t-test and return a tidy data frame
perform_t_test <- function(var) {
t_test_result <- t.test(data_1978 %>% filter(nearinc == 1) %>% pull(!!sym(var)),
data_1978 %>% filter(nearinc == 0) %>% pull(!!sym(var)))
return(tidy(t_test_result))
}
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test)
print(t_test_results)
# Create a variable for the post-treatment period (1981)
data <- data %>%
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# DD REGRESSION, Y = Wind+Solar installed capacity (MW), using lm package
DD_cap1 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap1 <- starprep(DD_cap1, stat = c("std.error"), se_type = "HC2", alpha = 0.05)
se_models <- list(se_DD_cap1[[1]], se_DD_cap2[[1]])
stargazer(DD_cap1, DD_cap2, se = se_models, keep=c("rps_D"), type="text")
DD_cap2 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap2 <- starprep(DD_cap2, stat = c("std.error"), se_type = "CR2", clusters=RPS$state_name, alpha = 0.05)
se_models <- list(se_DD_cap1[[1]], se_DD_cap2[[1]])
stargazer(DD_cap1, DD_cap2, se = se_models, keep=c("rps_D"), type="text")
se_nearinc_year1981 <- se_mod_dd_simple[[1]][3]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("95% Confidence Interval for the causal effect of the incinerator:", lower_bound, "-", upper_bound)
str(data)
data_sub <- data %>%
filter(year == 1978 | year == 1981)
data_sub$nearinc_post <- data_sub$nearinc * (data_sub$year == 1981)
dd_model <- lm(rprice ~ nearinc_post * factor(year), data = data_sub)
summary(dd_model)
library(stargazer)
library(estimatr)
library(ggplot2)
library(plm)
library(lmtest)
library(dplyr)
# SET WORKING DIRECTORY
# IMPORT CSV DATA
RPS <- read.csv("RPS_data.csv")
# SUMMARY STATISTICS
stargazer(RPS, type="text", digits=2)
# LIST SOME VARIABLES FOR CALIFORNIA
RPS%>%
filter(state_name == "California")%>%
select(state_name, year, rps_D, rps_ever_adopter, rps_implementation_year)%>%
View
NEW_RPS_D = matrix(0, nrow(RPS), 1)
NEW_RPS_D = as.numeric((RPS$rps_ever_adopter==1) & (RPS$year>=RPS$rps_implementation_year))
cor(NEW_RPS_D, RPS$rps_D)
mean(RPS$rps_D)
mean(NEW_RPS_D)
# DD REGRESSION, Y = Wind+Solar installed capacity (MW), using lm package
DD_cap1 <- lm(formula = cap_WS_mw ~ rps_D + as.factor(state_name) + as.factor(year), data=RPS)
se_DD_cap1 <- starprep(DD_cap1, stat = c("std.error"), se_type = "HC2", alpha = 0.05)
# Calculate the average house prices for each group
avg_prices <- data %>%
group_by(year1981, nearinc) %>%
summarise(avg_rprice = mean(rprice))
library(tidyverse)
library(stargazer)
library(estimatr)
library(broom)
data <- read_csv("KM_EDS241.csv")
data_1981 <- data |> filter(year == 1981)
mod1 <- lm(rprice ~ nearinc, data = data_1981)
se_model1 <- starprep(mod1, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
stargazer(mod1, se = se_model1, type="text")
data_1978 <- data |>
filter(year == 1978)
data_near_inc <- subset(data_1978, nearinc == 1)
data_not_near_inc <- subset(data_1978, nearinc == 0)
summary(data_near_inc)
summary(data_not_near_inc)
# Create a function to perform the t-test and return a tidy data frame
perform_t_test <- function(var) {
t_test_result <- t.test(data_1978 %>% filter(nearinc == 1) %>% pull(!!sym(var)),
data_1978 %>% filter(nearinc == 0) %>% pull(!!sym(var)))
return(tidy(t_test_result))
}
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test)
print(t_test_results)
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# Calculate the average house prices for each group
avg_prices <- data %>%
group_by(year1981, nearinc) %>%
summarise(avg_rprice = mean(rprice))
# Calculate the differences in average house prices
diff_pre_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 0]
diff_post_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 0]
# Calculate the difference-in-differences estimator
dd_estimator <- diff_post_treatment - diff_pre_treatment
# Display the result
cat("Difference-in-differences estimator:", dd_estimator)
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
se_nearinc_year1981 <- se_mod_dd_simple[[1]][3]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
# Estimate the DD model with controls for house and lot characteristics
mod_dd_controls <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
# Calculate robust standard errors
se_mod_dd_controls <- starprep(mod_dd_controls, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_controls, se = se_mod_dd_controls, type="text")
# Perform a joint hypothesis test (F-test) on the coefficients of house and lot characteristics
linearHypothesis(mod_dd_controls, c("age = 0", "rooms = 0", "area = 0", "land = 0"), vcov = vcovHC(mod_dd_controls, type = "HC1"))
# Calculate robust standard errors
se_mod_dd_controls <- starprep(mod_dd_controls, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_controls, se = se_mod_dd_controls, type="text")
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_with_controls$coefficients["year1981:nearinc"])
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
library(tidyverse)
library(stargazer)
library(estimatr)
library(broom)
data <- read_csv("KM_EDS241.csv")
data_1981 <- data |> filter(year == 1981)
mod1 <- lm(rprice ~ nearinc, data = data_1981)
se_model1 <- starprep(mod1, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
stargazer(mod1, se = se_model1, type="text")
data_1978 <- data |>
filter(year == 1978)
data_near_inc <- subset(data_1978, nearinc == 1)
data_not_near_inc <- subset(data_1978, nearinc == 0)
summary(data_near_inc)
summary(data_not_near_inc)
# Create a function to perform the t-test and return a tidy data frame
perform_t_test <- function(var) {
t_test_result <- t.test(data_1978 %>% filter(nearinc == 1) %>% pull(!!sym(var)),
data_1978 %>% filter(nearinc == 0) %>% pull(!!sym(var)))
return(tidy(t_test_result))
}
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test)
print(t_test_results)
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# Calculate the average house prices for each group
avg_prices <- data %>%
group_by(year1981, nearinc) %>%
summarise(avg_rprice = mean(rprice))
# Calculate the differences in average house prices
diff_pre_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 0]
diff_post_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 0]
# Calculate the difference-in-differences estimator
dd_estimator <- diff_post_treatment - diff_pre_treatment
# Display the result
cat("Difference-in-differences estimator:", dd_estimator)
se_nearinc_year1981 <- se_mod_dd_simple[[1]][3]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
# Estimate the DD model with controls for house and lot characteristics
mod_dd_controls <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
# Calculate robust standard errors
se_mod_dd_controls <- starprep(mod_dd_controls, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_controls, se = se_mod_dd_controls, type="text")
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
library(tidyverse)
library(stargazer)
library(estimatr)
library(broom)
data <- read_csv("KM_EDS241.csv")
data_1981 <- data |> filter(year == 1981)
mod1 <- lm(rprice ~ nearinc, data = data_1981)
se_model1 <- starprep(mod1, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
stargazer(mod1, se = se_model1, type="text")
data_1978 <- data |>
filter(year == 1978)
data_near_inc <- subset(data_1978, nearinc == 1)
data_not_near_inc <- subset(data_1978, nearinc == 0)
summary(data_near_inc)
summary(data_not_near_inc)
# Create a function to perform the t-test and return a tidy data frame
perform_t_test <- function(var) {
t_test_result <- t.test(data_1978 %>% filter(nearinc == 1) %>% pull(!!sym(var)),
data_1978 %>% filter(nearinc == 0) %>% pull(!!sym(var)))
return(tidy(t_test_result))
}
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test)
print(t_test_results)
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
View(data)
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# Calculate the average house prices for each group
avg_prices <- data %>%
group_by(year1981, nearinc) %>%
summarise(avg_rprice = mean(rprice))
# Calculate the differences in average house prices
diff_pre_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 0]
diff_post_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 0]
# Calculate the difference-in-differences estimator
dd_estimator <- diff_post_treatment - diff_pre_treatment
# Display the result
cat("Difference-in-differences estimator:", dd_estimator)
View(data_1978)
se_nearinc_year1981 <- se_mod_dd_simple[[1]][3]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
se_mod_dd_simple[[1]][4]
se_nearinc_year1981 <- se_mod_dd_simple[[1]][4]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[5] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[5] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
mod_dd_simple$coefficients[5]
mod_dd_simple$coefficients[4]
se_nearinc_year1981 <- se_mod_dd_simple[[1]][4]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
se_mod_dd_simple[[1]][4]
se_nearinc_year1981 <- se_mod_dd_simple[[1]][4]
mod_dd_simple$coefficients
mod_dd_simple$coefficients[4]
se_nearinc_year1981 <- se_mod_dd_simple[[1]][4]
# Calculate the t-distribution critical value for a 95% confidence interval
t_critical <- qt(0.975, df = mod_dd_simple$df.residual)
# Calculate the lower and upper bounds of the confidence interval
lower_bound <- mod_dd_simple$coefficients[4] - t_critical * se_nearinc_year1981
upper_bound <- mod_dd_simple$coefficients[4] + t_critical * se_nearinc_year1981
# Display the results
cat("We are 95% confident that the true value for the causal effect on the incinerator lies between:", lower_bound, "and", upper_bound)
# Calculate the 95% confidence interval for the causal effect (year1981:nearinc)
t_crit <- qt(0.975, df = mod_dd_simple$df.residual) # Calculate the critical value of the t-distribution
std_error <- se_mod_dd_simple[3] # Get the standard error for year1981:nearinc
point_estimate <- coef(mod_dd_simple)["year1981:nearinc"] # Get the point estimate for year1981:nearinc
# Calculate the lower and upper bounds of the 95% confidence interval
lower_bound <- point_estimate - t_crit * std_error
upper_bound <- point_estimate + t_crit * std_error
confint(mod_dd_simple)
stargazer(mod_dd_simple, type = 'text', ci = T, se_type="HC1", alpha = 0.05)
# Estimate the DD model with controls for house and lot characteristics
mod_dd_controls <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
# Calculate robust standard errors
se_mod_dd_controls <- starprep(mod_dd_controls, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_controls, se = se_mod_dd_controls, type="text")
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
# Estimate the DD model with controls for house and lot characteristics
mod_dd_controls <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
library(tidyverse)
library(stargazer)
library(estimatr)
library(broom)
data <- read_csv("KM_EDS241.csv")
data_1981 <- data |> filter(year == 1981)
mod1 <- lm(rprice ~ nearinc, data = data_1981)
se_model1 <- starprep(mod1, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
stargazer(mod1, se = se_model1, type="text")
data_1978 <- data |>
filter(year == 1978)
data_near_inc <- subset(data_1978, nearinc == 1)
data_not_near_inc <- subset(data_1978, nearinc == 0)
summary(data_near_inc)
summary(data_not_near_inc)
# Create a function to perform the t-test and return a tidy data frame
perform_t_test <- function(var) {
t_test_result <- t.test(data_1978 %>% filter(nearinc == 1) %>% pull(!!sym(var)),
data_1978 %>% filter(nearinc == 0) %>% pull(!!sym(var)))
return(tidy(t_test_result))
}
# Perform t-tests and store results in a data frame
t_test_results <- tibble(variable = c("age", "rooms", "area", "land", "rprice")) %>%
mutate(t_test = map(variable, perform_t_test)) %>%
unnest(t_test)
print(t_test_results)
# Create a variable for the post-treatment period (1981)
data <- data |>
mutate(year1981 = as.numeric(year == 1981))
# Estimate the DD model without controlling for house characteristics
mod_dd_simple <- lm(rprice ~ year1981 * nearinc, data = data)
# Calculate robust standard errors
se_mod_dd_simple <- starprep(mod_dd_simple, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_simple, se = se_mod_dd_simple, type="text")
# Calculate the average house prices for each group
avg_prices <- data %>%
group_by(year1981, nearinc) %>%
summarise(avg_rprice = mean(rprice))
# Calculate the differences in average house prices
diff_pre_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 0 & avg_prices$nearinc == 0]
diff_post_treatment <- avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 1] -
avg_prices$avg_rprice[avg_prices$year1981 == 1 & avg_prices$nearinc == 0]
# Calculate the difference-in-differences estimator
dd_estimator <- diff_post_treatment - diff_pre_treatment
# Display the result
cat("Difference-in-differences estimator:", dd_estimator)
stargazer(mod_dd_simple, type = 'text', ci = T, se_type="HC1", alpha = 0.05)
# Estimate the DD model with controls for house and lot characteristics
mod_dd_controls <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
# Calculate robust standard errors
se_mod_dd_controls <- starprep(mod_dd_controls, stat = c("std.error"), se_type = "HC1", alpha = 0.05)
# Display the results
stargazer(mod_dd_controls, se = se_mod_dd_controls, type="text")
cat("DD estimate without controls:", mod_dd_simple$coefficients["year1981:nearinc"], "\n")
cat("DD estimate with controls:", mod_dd_controls$coefficients["year1981:nearinc"])
car::linearHypothesis(mod_dd_controls, c('age = 0', 'rooms = 0', 'area = 0', 'land = 0'))
# Method 2
car::linearHypothesis(mod_dd_controls, c('age = 0', 'rooms = 0', 'area = 0', 'land = 0'))
?car::linearHypothesis()
# Method 2
# Full model (with house and lot characteristics)
mod_dd_full <- lm(rprice ~ year1981 * nearinc + age + rooms + area + land, data = data)
# Restricted model (without house and lot characteristics)
mod_dd_restricted <- lm(rprice ~ year1981 * nearinc, data = data)
# F-test comparing the full and restricted models
anova(mod_dd_restricted, mod_dd_full)
